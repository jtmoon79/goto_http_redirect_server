# .circleci/config.yml
#
# CircleCI 2.0 configuration file
# project: https://circleci.com/gh/jtmoon79/goto_http_redirect_server/tree/master
# source: https://github.com/jtmoon79/goto_http_redirect_server/tree/master/.circleci/
#
# YAML Schema from
# https://circleci.com/docs/2.0/configuration-reference/
# (http://archive.fo/y0dxX)
# CircleCI image list
# https://circleci.com/docs/2.0/circleci-images/ (http://archive.fo/z2SyE)
#
# XXX: images circleci/â€¦  require `sudo` for package updates
#
# TODO: break up "build, install, and run" jobs into pipeline dependencies of:
#       1. pytest 2. build, install 3. run test
#       similar to Azure delineation.
---
version: 2.1
jobs:
  build_install_run__circleci_python_3_5:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.5
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            sudo -- ./tools/ci/pkg-update.sh
            sudo -- ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__circleci_python_3_6:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            sudo -- ./tools/ci/pkg-update.sh
            sudo -- ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__circleci_python_3_7:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.7
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            sudo -- ./tools/ci/pkg-update.sh
            sudo -- ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__circleci_python_3_8:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.8
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            sudo -- ./tools/ci/pkg-update.sh
            sudo -- ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__python_3_7_windowsservercore:
    docker:
      - image: python:3.7-windowsservercore
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.7 on Windows Server Core
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/ci/pkg-update.sh
            ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__python_3_6_slim_stretch:
    docker:
      - image: python:3.6-slim-stretch
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6 on Debian Stretch
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/ci/pkg-update.sh
            ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__python_3_6_slim_buster:
    docker:
      - image: python:3.6-slim-buster
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6 on Debian Buster
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/ci/pkg-update.sh
            ./tools/ci/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
  build_install_run__python_3_6_alpine:
    docker:
      - image: python:3-alpine
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3 on Alpine Linux
          command: |
            set -ex
            # some pip build processes complain if this is not in the $PATH
            export PATH=${PATH}:/root/.local/bin
            # force +x
            chmod -v +x -- ./tools/ci/pkg-update.sh ./tools/ci/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/ci/pkg-update.sh
            ./tools/ci/pkg-install.sh bash  # for build-install-run.sh
            ./tools/ci/pkg-install.sh curl  # for server-test.sh
            # for pip install of 'twine' (builds many libraries)
            ./tools/ci/pkg-install.sh gcc python3-dev musl-dev libffi-dev openssl-dev
            ./.circleci/build-install-run.sh
      - store_test_results:
          path: ./pytest-report.xml
workflows:
  version: 2
  workflow_py:
    jobs:
      - build_install_run__circleci_python_3_5:
          filters:
            branches:
              only:
                - master
                - circleci
      - build_install_run__circleci_python_3_6:
          filters:
            branches:
              only:
                - master
                - circleci
      - build_install_run__circleci_python_3_7:
          filters:
            branches:
              only:
                - master
                - circleci
      - build_install_run__circleci_python_3_8:
          filters:
            branches:
              only:
                - master
                - circleci
      - build_install_run__python_3_6_alpine:
          filters:
            branches:
              only:
                - master
                - circleci
      #- build_install_run__python_3_7_windowsservercore  # Issue #2
      - build_install_run__python_3_6_slim_stretch:
          filters:
            branches:
              only:
                - master
                - circleci
      - build_install_run__python_3_6_slim_buster:
          filters:
            branches:
              only:
                - master
                - circleci
...
